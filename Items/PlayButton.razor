<style>
    a {
        text-decoration: none;
        color: inherit;
    }

    .vid-wrapper {
        display: inline-block;
        position: relative;
    }

    .play-btn {
        color: orangered;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    }

    .vid-wrapper .play-btn:hover {
        color: red;
    }
</style>
<div>
    <h4>WATCH ON YOUTUBE</h4>
    <div style="zoom:80%;" class="vid-wrapper">

        @if (Item != null && Item.YoutubeUrl.IsValidString())
        {
            <a href="@this.Item.YoutubeUrl" target="_BLANK">
                <img src="@imgUrl" />
                <i class="play-btn fa fa-youtube-play fa-3x" aria-hidden="true"></i>
            </a>
        }
    </div>

</div>
@code {
    ProjectItem _item = null;
    [Parameter]
    public ProjectItem Item
    {
        get { return _item; }
        set
        {
            _item = value;
            RenderAsync();

        }
    }
    string imgUrl = "";
    protected override void OnInitialized()
    {
        base.OnInitialized();
        StateHasChanged();
    }

    async void RenderAsync()
    {
        if (Item == null)
            return;
        if (Item.YoutubeUrl.IsValidString() == false)
            return;
        var yt = await YTHelper.GetDetailsAsync(Item.YoutubeUrl);
        if (yt != null)
        {
            if (yt.thumbnail_url != null)
            {
                imgUrl = yt.thumbnail_url;
                StateHasChanged();
            }
        }
    }
    string GetId()
    {
        return this.Item.YoutubeUrl.Split('=').LastOrDefault();
    }
}
